# -*- coding: utf-8 -*-
"""
Created on Tue Mar 15 10:33:47 2016

@author: kinshiryuu
"""

# Algorytm rozpoznawania bot-user
# Użyte dane: training_features dla ratio_25
# Normalizacja: MaxAbsScalar
# Użyty algorytm: SVC
# Dokładność: 0.86209
# Oto następujące kroki programu

# 1. Pobranie bibliotek
import numpy as np
import cPickle as pickle
from sklearn.svm import SVC
from sklearn.metrics import accuracy_score
from sklearn.preprocessing import MaxAbsScaler

# 2. Pobranie danych
raw_X = np.load("../../Test Data/2016-03-13/ratio_25/training_features.npy")
raw_X = raw_X.astype("float64")
raw_y = np.load("../../Test Data/2016-03-13/ratio_25/bots.npy")

# 4. Ustalenie normalizacji
normalizer = MaxAbsScaler()


# 5. Lista numerów indeksów
A = [1291, 885, 656, 1527, 1491, 89, 845, 293, 1296, 1076, 1303, 1278, 1185, 705, 184, 634,
	484, 1104, 9, 1422, 623, 525, 1427, 1189, 252, 1055, 1226, 458, 1323, 442, 972,
	1177, 30, 167, 959, 83, 22, 1159, 468, 183, 1324, 420, 1134, 1530, 730, 766,
	640, 606, 750, 816, 823, 1410, 1094, 862, 1210, 1219, 1172, 1218, 1498, 627, 1168,
	1175, 255, 191, 111, 437, 26, 1142, 609, 698, 616, 822, 1438, 861, 1256, 737,
	25, 1520, 1160, 1035, 973, 1111, 327, 1044, 542, 1378, 250, 1307, 452, 613, 625,
	1337, 825, 1261, 241, 407, 745, 733, 1505, 1077, 1435, 1039, 1349, 201, 511, 955,
	1157, 336, 431, 230, 365, 610, 283, 1289, 62, 446, 1023, 423, 757, 641, 333,
	33, 32, 907, 863, 7, 968, 204, 904, 99, 1116, 799, 1030, 740, 851, 805,
	612, 1109, 648, 1020, 1545, 1117, 366, 633, 94, 769, 216, 670, 667, 1139, 887,
	1231, 1453, 13, 1203, 1382, 12, 1114, 1353, 645, 435, 1411, 1536, 101, 245, 1188,
	1412, 776, 1067, 52, 454, 1263, 1450, 704, 240, 351, 80, 1001, 923, 962, 1370,
	23, 1, 93, 455, 1123, 708, 499, 1229, 813, 677, 555, 381, 107, 1105, 793,
	213, 849, 91, 131, 70, 1045, 1002, 1286, 169, 1476, 314, 1064, 901, 1108, 1510,
	78, 508, 786, 690, 1101, 150, 1460, 812, 1181, 843, 88, 1033, 480, 803, 658,
	660, 31, 536, 679, 563, 1084, 120, 774, 915, 662, 378, 1223, 1390, 792, 839,
	488, 1494, 1268, 1416, 911, 1429, 390, 1193, 1128, 742, 225, 299, 266, 638, 1469,
	185, 1156, 1149, 680, 552, 1511, 801, 939, 1075, 485, 434, 1153, 1397, 790, 476,
	1472, 1166, 630, 46, 1274, 1272, 462, 1443, 1335, 347, 951, 470, 974, 1406, 1529,
	1255, 207, 396, 806, 1031, 895, 604, 1451, 1387, 553, 82, 808, 994, 817, 1328,
	354, 1098, 345, 1526, 417, 1457, 1161, 34, 286, 465, 513, 37, 81, 629, 284,
	874, 35, 807, 1482, 400, 622, 1415, 135, 1051, 581, 909, 1376, 735, 686, 1250,
	966, 1315, 842, 300, 1299, 652, 403, 1212, 1547, 1133, 360, 344, 280, 353, 1523,
	703, 1137, 340, 1119, 408, 952, 976, 1081, 1207, 1304, 1535, 1341, 888, 432, 696,
	1466, 349, 1424, 429, 307, 764, 975, 1395, 1509, 350, 51, 1017, 761, 1383, 363,
	424, 1204, 1171, 475, 751, 325, 209, 917, 1125, 736, 67, 1363, 1191, 756, 789,
	361, 342, 357, 507, 352, 1163, 683, 1271, 326, 1072, 85, 312, 248, 519, 303,
	580, 712, 715, 1490, 930, 809, 970, 724, 501, 309, 227, 642, 893, 448, 1302,
	1437, 620, 621, 999, 426, 364, 748, 1399, 1478, 1479, 685, 190, 747, 221, 203,
	1009, 36, 1464, 1145, 777, 128, 1021, 510, 1371, 1240, 1445, 576, 836, 1198, 498,
	569, 1327, 1468, 1280, 182, 382, 796, 41, 1273, 1497, 706, 1502, 228, 206, 384,
	1217, 921, 1350, 1442, 457, 358, 441, 1015, 1058, 24, 1465, 929, 931, 663, 1141,
	1433, 711, 1295, 1155, 768, 818, 699, 523, 1259, 1447, 1297, 387, 912, 767, 753,
	841, 1480, 1441, 811, 830, 848, 798, 857, 40, 925, 1063, 1252, 1167, 889, 1436,
	669, 50, 1408, 64, 372, 1407, 1541, 65, 1456, 1471, 1054, 926, 903, 373, 687,
	1517, 197, 741, 755, 765, 672, 527, 256, 469, 1298, 1131, 794, 68, 1522, 1470,
	884, 689, 1019, 594, 956, 853, 787, 478, 922, 139, 1364, 618, 546, 615, 369,
	1162, 746, 1073, 1519, 1528, 1225, 1103, 467, 617, 276, 1046, 377, 331, 1016, 1481,
	1170, 1459, 1100, 1249, 1369, 2, 1431, 1047, 1391, 992, 752, 1375, 945, 673, 964,
	393, 53, 516, 1394, 892, 985, 1446, 419, 1173, 482, 147, 38, 1253, 702, 946,
	1317, 1318, 692, 289, 960, 1374, 1227, 505, 1477, 208, 295, 61, 1244, 1093, 1147,
	323, 1348, 710, 504, 1158, 1409, 1024, 1028, 367, 1319, 568, 589, 518, 590, 1144,
	721, 136, 1138, 16, 281, 258, 1154, 503, 515, 607, 296, 587, 1205, 566, 855,
	11, 653, 759, 934, 819, 19, 1321, 1423, 196, 1396, 133, 235, 701, 321, 118,
	261, 598, 611, 905, 1169, 928, 1251, 1325, 1056, 1352, 322, 1455, 149, 21, 1078,
	579, 421, 1264, 114, 762, 102, 1342, 1183, 1190, 1266, 943, 226, 17, 141, 1493,
	1515, 145, 238, 877, 1206, 957, 418, 1546, 988, 1062, 950, 573, 674, 572, 229,
	492, 86, 440, 1483, 439, 288, 477, 814, 1300, 77, 242, 549, 1287, 422, 591,
	490, 860, 1124, 233, 1182, 998, 316, 832, 665, 944, 935, 815, 1292, 880, 657,
	996, 346, 558, 990, 1400, 838, 695, 171, 257, 493, 865, 1148, 1486, 1293, 858,
	714, 115, 1513, 1000, 953, 471, 1113, 305, 273, 561, 1097, 876, 103, 58, 840,
	1150, 310, 1434, 781, 215, 92, 166, 1452, 1539, 438, 234, 270, 605, 897, 1314,
	597, 961, 1285, 466, 983, 1336, 1178, 603, 1269, 659, 537, 820, 700, 1120, 297,
	450, 635, 1542, 444, 47, 338, 868, 1454, 232, 389, 902, 436, 1320, 5, 1401,
	112, 1403, 1215, 109, 1034, 583, 368, 834, 1010, 1283, 443, 664, 997, 1090, 198,
	643, 570, 451, 1197, 1070, 1059, 1373, 362, 647, 986, 1032, 3, 802, 723, 989,
	306, 10, 14, 709, 1426, 132, 4, 682, 529, 1544, 1489, 1088, 332, 1282, 285,
	1534, 473, 160, 459, 1524, 784, 178, 1004, 239, 506, 287, 913, 262, 425, 1316,
	824, 1365, 290, 1356, 729, 1048, 1538, 1092, 914, 821, 249, 28, 749, 535, 509,
	66, 188, 219, 1404, 1242, 244, 835, 1501, 1276, 1540, 744, 1129, 596, 1284, 758,
	654, 1496, 15, 1151, 743, 1007, 1543, 879, 251, 1208, 1135, 144, 388, 550, 404,
	1258, 1488, 1060, 1548, 564, 1503, 319, 782, 1174, 494, 688, 317, 391]
B = [979, 1358, 1458, 1130, 1405, 1012, 540, 1294, 725, 995, 410, 123, 772, 1194, 1115, 726,
	54, 517, 414, 534, 719, 130, 871, 771, 1082, 1222, 405, 1014, 829, 265, 199,
	1357, 639, 96, 1340, 236, 965, 113, 42, 1537, 84, 795, 1525, 628, 138, 1180,
	100, 267, 1216, 1165, 637, 164, 121, 1211, 883, 409, 827, 1338, 343, 1521, 859,
	1199, 1354, 1005, 142, 1414, 1238, 427, 666, 1008, 1279, 595, 530, 272, 119, 1379,
	430, 969, 324, 275, 43, 1533, 1096, 181, 44, 1461, 586, 898, 1277, 97, 636,
	716, 63, 154, 938, 486, 1052, 302, 599, 20, 158, 200, 1504, 933, 1311, 1192,
	1372, 977, 1022, 844, 1200, 562, 593, 1038, 1232, 75, 140, 254, 55, 548, 1026,
	359, 1368, 728, 79, 738, 828, 153, 890, 74, 124, 924, 1018, 1359, 282, 984,
	718, 538, 90, 214, 1388, 1228, 1330, 59, 449, 1313, 1449, 1531, 1270, 402, 0,
	348, 1381, 18, 547, 691, 1518, 1196, 1360, 720, 395, 650, 668, 1420, 1006, 1152,
	308, 1312, 1234, 942, 247, 1419, 1334, 495, 29, 179, 551, 298, 1136, 313, 98,
	1143, 717, 104, 1146, 1184, 1516, 279, 165, 1065, 1366, 1089, 900, 315, 1110, 854,
	948, 869, 151, 646, 1213, 982, 1037, 481, 632, 39, 731, 881, 95, 800, 398,
	376, 1474, 788, 846, 894, 575, 411, 1362, 791, 1331, 1425, 831, 329, 584, 1310,
	1473, 383, 619, 6, 1011, 413, 651, 143, 27, 1275, 810, 1380, 533, 291, 428,
	520, 339, 152, 341, 491, 577, 1080, 896, 127, 1305, 574, 125, 1346, 237, 1050,
	330, 671, 502, 1118, 1243, 1262, 1122, 212, 920, 379, 1179, 1220, 415, 392, 311,
	1013, 601, 531, 186, 1236, 1069, 159, 334, 1417, 1281, 1237, 1301, 170, 479, 910,
	1361, 397, 355, 157, 1351, 110, 978, 1432, 1239, 72, 412, 487, 1309, 1512, 954,
	891, 328, 173, 56, 218, 1127, 163, 1027, 826, 693, 1003, 116, 174, 675, 987,
	1377, 697, 1345, 464, 754, 512, 1068, 447, 1214, 560, 941, 1500, 189, 649, 541,
	1195, 259, 433, 707, 220, 778, 1248, 967, 1186, 676, 394, 192, 370, 371, 878,
	543, 1246, 1230, 460, 837, 1221, 399, 1367, 8, 223, 866, 1099, 474, 557, 1083,
	681, 872, 918, 193, 1095, 48, 804, 385, 205, 148, 1329, 445, 1508, 106, 187,
	539, 873, 1428, 739, 1326, 264, 763, 224, 727, 162, 463, 416, 713, 380, 1086,
	556, 981, 45, 1385, 1057, 919, 1043, 1507, 1499, 867, 146, 172, 1308, 489, 1332,
	524, 117, 1265, 779, 301, 274, 600, 850, 1514, 1487, 318, 971, 320, 1392, 526,
	1344, 168, 875, 532, 1042, 211, 899, 916, 1102, 1260, 661, 210, 500, 544, 335,
	783, 453, 176, 1202, 732, 847, 134, 496, 937, 1413, 137, 76, 1257, 194, 202,
	785, 222, 1333, 1121, 608, 260, 483, 177, 1187, 155, 278, 993, 958, 775, 1389,
	571, 927, 1402, 1448, 940, 1418, 1393, 1532, 1254, 1467, 49, 108, 73, 304, 1306,
	356, 1463, 1241, 678, 592, 1439, 1247, 129, 624, 1506, 773, 277, 461, 554, 1245,
	780, 582, 105, 1492, 1164, 1025, 1106, 567, 1495, 269, 833, 770, 722, 1087, 991,
	1462, 60, 1126, 472, 1041, 57, 71, 1112, 246, 1421, 1290, 271, 268, 294, 1132,
	1061, 292, 195, 514, 374, 585, 1484, 565, 175, 406, 864, 870, 1398, 1049, 734,
	375, 949, 1430, 521, 886, 856, 1322, 1091, 932, 936, 578, 1355, 602, 963, 1233,
	1066, 1053, 1339, 1040, 497, 253, 1485, 337, 1347, 1343, 122, 980, 87, 126, 528,
	694, 1444, 655, 161, 626, 545, 906, 1235, 684, 263, 69, 882, 1209, 180, 1386,
	1074, 631, 908, 1176, 947, 401, 1085, 1029, 797, 1107, 386, 559, 588, 522, 644,
	614, 1440, 1140, 1267, 1475, 217, 1201, 456, 231, 1079, 1224, 1036, 156, 852, 1384,
	1288, 243, 760, 1071]

# 6. Zmiana na numpy.array
train_index = np.asarray(A)
test_index = np.asarray(B)

# 7. Podział danych
X_train, X_test = raw_X[train_index], raw_X[test_index]
y_train, y_test = raw_y[train_index], raw_y[test_index]

# 8. Normalizacja
X_train_norm = normalizer.fit_transform(X_train)
X_test_norm = normalizer.transform(X_test)

# 9. Nauka algorytmu
clf = SVC(kernel='rbf', C=1, gamma=0.5, coef0=0.0)
clf.fit(X_train_norm, y_train)
pred = clf.predict(X_test_norm)
acc = accuracy_score(pred, y_test)

# 10. Wynik
print "Accuracy:",acc

# 11. Zapisanie modelu
with open("model.pickle", "wb") as f:
  pickle.dump((clf, normalizer), f, 2);
